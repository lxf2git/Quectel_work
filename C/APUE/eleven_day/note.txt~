专有进程间通信
#include<sys/ipc.h>

#include <sys/msg.h>

key_t ftok(const char *pathname, int proj_id);

消息队列
 int msgget(key_t key, int msgflg);
创建或取得一个消息队列对象
成功返回对象id 失败-1

int msgsnd(int msqid, const void *msgp, size_t msgsz, int msgflg);
打包发送一个消息数据到消息队列中
msqid：msgget返回值
msgflg：0 IPC_NOWAIT

ssize_t msgrcv(int msqid, void *msgp, size_t msgsz,long msgtyp,int msgflg);
从消息队列中接收一个指定类型的消息
msgtyp：0 什么类型都可以
msgflg：0 没有指定类型的消息就等待 
       IPC_NOWAIT 不等待

struct msgbuf {
               long mtype;       /* message type, must be > 0 */消息类型
               char mtext[1];    /* message data */任意类型的任意消息
           };

int msgctl(int msqid, int cmd, struct msqid_ds *bu**f);
作业1：消息队列版cat
作业2 ：管道版cat








